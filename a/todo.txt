/    ->welcomepage?

    /admin
        /getUser
        /userManagement
            /:id
                POST to user/deleteUser
                POST to user/modifyUser
        /boardManagement
            /:id
        /POST update board
        /POST delete board
        /GET&POST add board

    /user
        /login
            /get
            /post (login) => redierct/login
                (userAdd) => \\
        /logout
            /get
            /post?
        /info (after session)
            /get  => postList?
            /post => modifyUser & redirect/info
                => deleteUser & session.destroy => redirect/info
        
    /board
        /:id
            /addPost
        /:boardId
            /:id
                /updatePost
                /deletePost

-------------------------------------------------------------
    
-sql-

board_information
        --
board_id    int(11) PK auto_increment
admin       tinyint(1)==boolean  (1=admin, else notadmin)

board
        ``
post_id     int(11) PK auto_increment
author      varchar(50) =>작성자
post_title  varchar(255)
post_body   varchar(255)
board_id    int(11) FK from board_information -> board_id
date        current_timestamp on update current_timestamp

customer
        ``
c_id        varchar(50)    PK
c_name      varchar(50)
password    varchar(255)   argon2Hash


댓글...

게시판information => boardId(int, pk, autoincre), admin(boolean), boardName(varchar), 
게시판            => postId(int, pk, autoincre), author(varchar 50), postTitle(varchar 255), postBody(varchar 255),
                    date(Date), boardId(fk)

create table board_information (
    board_id int auto_increment,
    admin boolean,
    board_name varchar(255),
    primary key(board_id)
)default charset=utf8;

create table board (
    post_id int auto_increment,
    author varchar(50),
    post_title varchar(255),
    post_body varchar(255),
    board_id int,
    date datetime default current_timestamp on update current_timestamp,
    primary key (post_id),
    foreign key (board_id) references board_information (board_id) on delete cascade on update cascade    
)default charset=utf8;


create table comment (
    comment_id int auto_increment,
    comment_author varchar(50),
    post_id int,
    comment_body varchar(255),
    date datetime default current_timestamp on update current_timestamp,
    primary key (comment_id),
    foreign key (post_id) references board (post_id) on delete cascade on update cascade    
) default charset=utf8;



insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지", "테스트", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지2", "테스트2", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지3", "테스트3", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지4", "테스트4", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지5", "테스트5", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지6", "테스트6", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지", "테스트", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지2", "테스트2", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지3", "테스트3", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지4", "테스트4", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지5", "테스트5", 1);
insert into board (author, post_title, post_body, board_id) 
values ('admin', "공지6", "테스트6", 1);


insert into board (author, post_title, post_body, board_id) 
values ('1', "everyone", "테스트", 2);
insert into board (author, post_title, post_body, board_id) 
values ('hi', "every-one", "테스트", 2);
insert into board (author, post_title, post_body, board_id) 
values ('hello', "every one", "테스트", 2);


FOREIGN KEY (customer_sid) REFERENCES customer (sid) ON DELETE CASCADE


auto_increment 재설정
set @cnt=0;
update board_information set board_information.board_id=@cnt:=@cnt+1;
alter table board_information auto_increment=1;

------------------------------------------------
css
postAdd.html
{% block css %}
    <style>
        body {
            padding-top: 70px;
            padding-bottom: 30px;
        }
    </style>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">
{% endblock %}




select b.board_name, a.* from board_information b, board a
where a.author = "admin" and a.board_id = b.board_id


select R1.* from (
select b.board_name, a.* from board_information b, board a where a.author = "1" and a.board_id = b.board_id
) R1 limit 10 offset 0


select count(*) count from (
    select a.* from board_information b, board a where b.board_id = 1 and b.board_id = a.board_id
) R1;
select count(*) count from (
    select a.* from board_information b, board a where b.board_id = ? and b.board_id = a.board_id
) R1;

///////////////////////////////////
12-12
사용자 - id
게시글의 - author
    bt 삭제시 bt가쓴글 3개 삭제?

    delete from (
        select c.c_id, b.author from customer c, board b where b.author = 'bt' and c.c_id = 'bt'
    ) R1


    관리자전용게시글 글쓰는곳인데 일반사용자가 접근
    http://localhost:3000/board/1/addPost?page=1

    +  일반사용자게시글에 비로그인한사람이 글쓰기
    http://localhost:3000/board/2/addPost?page=1
    수정
    http://localhost:3000/board/2/7/updatePost?page=1

    get MEthod들에대해 전부 예외처리가 필요한시점

    board
        /:boardId
        /:boardId/addPost
        /:boardId/:postId
        /:boardId/:postId/updatePost
    
    user
        /logout
        /info
        


    
        